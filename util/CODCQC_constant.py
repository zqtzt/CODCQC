import numpy as np

kflagt_T_list = ['kflagt1', 'kflagt2', 'kflagt3', 'kflagt4', 'kflagt5', 'kflagt6', 'kflagt7', 'kflagt8', 'kflagt9',
               'kflagt10', 'kflagt11', 'kflagt12', 'kflagt13','kflagt14']

kflagt_S_list = ['kflagt1', 'kflagt2', 'kflagt3', 'kflagt4', 'kflagt5', 'kflagt6', 'kflagt7', 'kflagt8', 'kflagt9',
               'kflagt10','kflagt11','kflagt12']
               
type_name = {999: 'UNKNOWN', 1: 'OSD', 2: 'CTD', 3: 'MBT', 4: 'XBT', 5: 'SUR', 6: 'APB', 7: 'MRB', 8: 'PFL', 9: 'DRB',
             10: 'UOR',11:'GLD',12:'DBT',13:'STD',14:'microBT',99: 'UNKNOWN'}

QCcheck_T_name = ['Basic infomation check','Sample levels order check','Instrument maximum depth check','Local bottom depth check','Global range check','Sea-water freezing point check','Local climatological range check','Constant value check','Spike check','Density inversion check','Multiple extrema check','Global vertical gradient check','Local gradient climatological range check','Instrument specific type (XBT) check']
QCcheck_S_name = ['basic infomation check','levels order check','instrument_type_depth check','GEBCO depth check','crude range check','Global Salinity-bottom check ','Global Salinity-density check','local climatology check','constant value check','spike check','salinity extrema check','global gradient check']


parmaxover_T = 35.0
parminover_T= -2.0
parmaxover_S = 43.0
parminover_S = 0.0

# standard level
Std_level_119=np.array([1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400, 425, 450, 475, 500, 525, 550, 575, 600, 625, 650, 675, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 1750, 1800, 1850, 1900, 1950, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000],dtype=np.float)
Std_level_350=np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 710, 720, 730, 740, 750, 760, 700, 780, 790, 800, 810, 820, 830, 840, 850, 860, 870, 880, 890, 900, 910, 920, 930, 940, 950, 960, 970, 980, 990, 1000, 1010, 1020, 1030, 1040, 1050, 1060, 1070, 1080, 1090, 1100, 1110, 1120, 1130, 1140, 1150, 1160, 1170, 1180, 1190, 1200, 1210, 1220, 1230, 1240, 1250, 1260, 1270, 1280, 1290, 1300, 1310, 1320, 1330, 1340, 1350, 1360, 1370, 1380, 1390, 1400, 1410, 1420, 1430, 1440, 1450, 1460, 1470, 1480, 1490, 1500, 1510, 1520, 1530, 1540, 1550, 1560, 1570, 1580, 1590, 1600, 1610, 1620, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1700, 1710, 1720, 1730, 1740, 1750, 1760, 1770, 1780, 1790, 1800, 1810, 1820, 1830, 1840, 1850, 1860, 1870, 1880, 1890, 1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000],dtype=np.float)

# thresholds for gradient check
DTDZmaxover = 1.0
DTDZminover = -1.5
# subjective setting, depend on the histogram
deltaext = 0.5
maxextre = 4  # 牛眼个数为4个
levminext = 6  # 小于6个观测值,用于AQC_06check
minlevel = 3  # 小于3个观测数据
perlimbad = 75.0  # 75%
year = 2023

nsz=120-1

# global crude range check parameter
tzlim1_zhetao = np.array(
    [-1.94768755000000, -1.95225004600000, -1.98010006200000, -1.98849999900000, -1.98767897400000,
     -1.98000001900000, -1.97667619500000, -1.97675002200000, -1.97473259700000, -1.97214731100000,
     -1.97280522300000, -1.96975002900000, -1.96406035300000, -1.95867118700000, -1.95760819400000,
     -1.95473037400000, -1.95792963900000, -1.95863351500000, -1.95965448900000, -1.95651969800000,
     -1.95756032000000, -1.96557534800000, -1.96242908500000, -1.96283887600000, -1.96242118300000,
     -1.96018763000000, -1.96130792500000, -1.96206628000000, -1.96351277500000, -1.96274047800000,
     -1.96340738700000, -1.96629215800000, -1.96462357800000, -1.96472310100000, -1.96108301100000,
     -1.96747040100000, -1.96970592300000, -1.97113240800000, -1.97472140600000, -1.97662952600000,
     -1.97740986900000, -1.97642361000000, -1.97852320000000, -1.98114364900000, -1.97265709300000,
     -1.96929490500000, -1.96310323200000, -1.96499998900000, -1.95130717800000, -1.95000004800000,
     -1.93845873300000, -1.93415430900000, -1.92749995000000, -1.92100000400000, -1.90553284500000,
     -1.88951297300000, -1.43708553800000, -1.24599521200000, -1.22622388200000, -1.19640178600000,
     -1.18386636400000, -1.17723471300000, -1.14992000300000, -1.14137001300000, -1.14768251500000,
     -1.16601528200000, -1.13648510700000, -1.13120994600000, -1.13056283900000, -1.11987579900000,
     -1.11101897700000, -1.10207557000000, -1.10433081200000, -1.09833700200000, -1.10000002400000,
     -1.09943973900000, -1.09934522300000, -1.10456908100000, -1.11467329500000, -1.18289419100000,
     -1.17850906000000, -1.16976239300000, -1.17973916500000, -1.18590824400000, -1.17741727300000,
     -1.16949041700000, -1.16556187600000, -1.17066016000000, -1.17730749100000, -1.16583911300000,
     -1.17686218300000, -1.18379736700000, -1.14814518400000, -1.14955866200000, -0.891392809000000,
     -0.869396445000000, -0.685681101000000, -0.670964240000000, -0.724622044000000, -0.777285709000000,
     -0.778309367000000, -0.659930969000000, -0.569577095000000, -0.614241714000000, -0.648026484000000,
     -0.570829078000000, -0.578029247000000, -0.557322245000000, -0.558271451000000, -0.511880521000000,
     -0.460733566000000, -0.442026734000000, -0.437393090000000, -0.430000007000000, -0.387023531000000,
     -0.372624350000000, -0.307705852000000, -0.300000000000000, -0.300000000000000, -0.300000000000000])
tzlim2_zhetao = np.array(
    [34, 34, 33, 33, 32, 31, 30.9524351000000, 30.7690656500000, 30.6877841100000, 30.6411232200000,
     30.6260553500000, 30.5103025900000, 30.5368883300000, 30.5031952500000, 30.4405058700000, 30.3901155200000,
     30.3020436900000, 30.1983851500000, 30.0918122700000, 29.9921878200000, 29.8745873100000, 29.7502000800000,
     29.5337267400000, 29.3349410000000, 29.0279300300000, 28.6714901000000, 28.3272080100000, 27.7937463700000,
     27.3139913300000, 26.7029808900000, 26.0135981400000, 25.0630505500000, 23.0468355700000, 21.6897801600000,
     20.6878816700000, 19.9103868500000, 19.4996235500000, 19.2304928400000, 19.0749695000000, 18.9472847600000,
     18.8093052400000, 18.6695578800000, 18.4978696100000, 18.3219874100000, 18.1808969200000, 18.0227984400000,
     17.8706468000000, 17.6676505900000, 17.4451009300000, 17.1791031500000, 16.8746170800000, 16.5123200800000,
     16.1097737800000, 15.6929356400000, 14.7397770200000, 13.7781605100000, 12.8439988500000, 12.2040251500000,
     11.9186077300000, 11.7066536700000, 11.7335776600000, 11.5929144400000, 11.5260457000000, 11.4784821100000,
     11.3656268000000, 11.1834515800000, 10.8650910000000, 10.3836113700000, 10.0202278800000, 9.42836473500000,
     8.47432089100000, 7.86472831600000, 7.33862650400000, 6.87549015200000, 6.42825586000000, 6.01293056000000,
     5.69437509700000, 5.39401503500000, 5.12192987700000, 5.10193367100000, 4.94046074900000, 4.16811606500000,
     3.89245786700000, 3.72693968900000, 4.05846577700000, 3.49517337700000, 3.43042504000000, 3.46090576700000,
     3.26465470600000, 3.20197281900000, 3.12520498800000, 3.10977184400000, 3.01400997000000, 3.01624433900000,
     2.98028220300000, 2.81757211000000, 2.75773802300000, 2.64315139400000, 2.63960788800000, 2.60740921600000,
     2.61459414900000, 2.61590898400000, 2.59102693700000, 2.61836438200000, 2.60410305500000, 2.57222933200000,
     2.57394803000000, 2.55913434300000, 2.57190694100000, 2.58704134400000, 2.57875664500000, 2.57960103900000,
     2.56825061400000, 2.48493122200000, 2.50142513200000, 2.50728940300000, 2.50781256100000, 2.48570308300000,
     2.49967947000000, 2.49967947000000])

tzlim2_zhetao[:53]=tzlim2_zhetao[:53]*1.01  #tol=0.01


### zhetao's salinity_density_check parameters
bins=np.array([999, 999.50, 1000, 1000.5, 1001, 1001.5, 1002, 1002.5, 1003, 1003.5, 1004, 1004.5, 1005, 1005.5, 1006, 1006.5, 1007, 1007.5, 1008, 1008.5, 1009, 1009.5, 1010, 1010.5, 1011, 1011.5, 1012, 1012.5, 1013, 1013.5, 1014, 1014.5, 1015, 1015.5, 1016, 1016.5, 1017, 1017.5, 1018, 1018.5, 1019, 1019.5, 1020, 1020.5, 1021, 1021.5, 1022, 1022.5, 1023, 1023.5, 1024, 1024.5, 1025, 1025.5, 1026, 1026.5, 1027, 1027.5, 1028, 1028.5, 1029, 1029.5, 1030, 1030.5, 1031, 1031.5, 1032, 1032.5, 1033, 1033.5, 1034, 1034.5, 1035, 1035.5, 1036, 1036.5, 1037, 1037.5, 1038, 1038.5, 1039, 1039.5, 1040, 1040.5, 1041, 1041.5, 1042, 1042.5, 1043, 1043.5, 1044, 1044.5, 1045, 1045.5, 1046, 1046.5, 1047, 1047.5, 1048, 1048.5, 1049, 1049.5, 1050, 1050.5, 1051, 1051.5, 1052, 1052.5, 1053, 1053.5, 1054, 1054.5, 1055, 1055.5, 1056, 1056.5, 1057, 1057.5, 1058, 1058.5, 1059, 1059.5, 1060])
bin_left=bins[0:-1]
bin_right=bins[1:]
sal_left_bound=np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.09930, 0.2071, 0.1897, 0.3895, 0.4547, 1.714400, 2.278900, 3.662500, 2.576400, 2.987200, 3.909700, 5.583700, 7.705300, 7.291200, 8.000400, 8.209200, 8.129500, 8.576200, 10.68100, 10.14470, 10.73840, 11.25690, 12.41350, 13.82370, 14.19410, 16.49120, 19.64890, 21.34690, 21.87450, 22.05380, 22.13740, 22.21100, 26.10210, 26.76640, 27.32990, 27.93830, 28.49440, 29.14320, 29.74480, 30.33300, 30.85300, 31.21570, 31.89340, 32.33560, 32.73010, 33.12, 33.52530, 33.66200, 33.80840, 33.95520, 34.01290, 34.06740, 34.13500, 34.21300, 34.26440, 34.31140, 34.34590, 34.38190, 34.42100, 34.45600, 34.49, 34.52, 34.54220, 34.56, 34.58600, 34.59650, 34.60710, 34.61600, 34.62270, 34.63080, 34.63840, 34.64380, 34.64780, 34.65, 34.65100, 34.65130, 34.64960, 34.64800, 34.65220, 34.65140, 34.65030, 34.64900, 34.62720, 34.61, 34.63, 34.63, 34.64150, 34.62, 34.62, 34.62, 34.64600, 34.64580, 34.64680, 34.64660, 34.64530, 34.31400, 34.31300, 34.31200, 34.29680, 34.62690, 34.66900, 34.65100, 34.67800, 34.69, 34.65300, 34.65, 34.67890, 34.70, 34.65, np.nan])
sal_right_bound=np.array([4.27610, 4.26820, 4.87000, 6.27600, 7.18700, 8.07750, 8.77210, 9.40000, 9.61050, 10.5040, 10.9466, 11.3974, 12.3149, 12.8400, 13.1500, 14.2844, 15.4556, 16.2057, 17.2257, 17.7393, 18.5799, 19.1659, 19.9236, 20.7450, 21.3000, 22.1161, 22.8614, 23.5459, 24.3000, 25.0074, 25.5583, 26.2900, 27.0081, 27.7320, 28.3692, 29.0502, 29.6998, 30.2505, 30.9238, 31.5423, 32.1287, 32.6623, 33.4285, 34.1447, 34.7260, 35.1900, 35.6960, 36.3666, 36.6742, 36.8510, 37.1781, 37.3793, 37.5260, 37.4666, 37.3540, 37.1290, 36.7962, 36.6170, 36.5262, 36.3680, 36.1490, 35.9250, 35.7780, 35.7993, 35.8480, 35.8870, 35.9653, 35.9840, 35.9200, 35.7520, 35.5560, 35.4220, 35.3190, 35.2450, 35.1888, 35.1520, 35.1823, 35.0790, 35.0430, 35.0167, 34.9986, 34.9827, 34.9751, 34.9675, 34.9570, 34.9517, 34.9490, 34.9470, 34.9431, 34.9400, 34.9270, 34.9220, 34.9187, 34.9160, 34.9165, 34.9150, 34.9127, 34.9110, 34.9100, 34.9100, 34.9100, 34.9100, 34.9010, 34.9000, 34.8984, 34.9010, 34.8892, 34.8872, 34.8810, 34.8810, 34.8800, 34.8650, 34.7200, 34.7500, 34.8510, 34.8310, 34.7058, 34.7000, 34.7200, 34.7130, 34.6789, np.nan])

# salinity vs bottom depth
bslim1=np.array([0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 1750, 1800, 1850, 1900, 1950, 2000, 2050, 2100, 2150, 2200, 2250, 2300, 2350, 2400, 2450, 2500, 2550, 2600, 2650, 2700, 2750, 2800, 2850, 2900, 2950, 3000, 3050, 3100, 3150, 3200, 3250, 3300, 3350, 3400, 3450, 3500, 3550, 3600, 3650, 3700, 3750, 3800, 3850, 3900, 3950, 4000, 4050, 4100, 4150, 4200, 4250, 4300, 4350, 4400, 4450, 4500, 4550, 4600, 4650, 4700, 4750, 4800, 4850, 4900, 4950, 5000, 5050, 5100, 5150, 5200, 5250, 5300, 5350, 5400, 5450, 5500, 5550, 5600, 5650, 5700, 5750, 5800, 5850, 5900, 5950, 6000, 6050])
bslim2=np.array([50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 1750, 1800, 1850, 1900, 1950, 2000, 2050, 2100, 2150, 2200, 2250, 2300, 2350, 2400, 2450, 2500, 2550, 2600, 2650, 2700, 2750, 2800, 2850, 2900, 2950, 3000, 3050, 3100, 3150, 3200, 3250, 3300, 3350, 3400, 3450, 3500, 3550, 3600, 3650, 3700, 3750, 3800, 3850, 3900, 3950, 4000, 4050, 4100, 4150, 4200, 4250, 4300, 4350, 4400, 4450, 4500, 4550, 4600, 4650, 4700, 4750, 4800, 4850, 4900, 4950, 5000, 5050, 5100, 5150, 5200, 5250, 5300, 5350, 5400, 5450, 5500, 5550, 5600, 5650, 5700, 5750, 5800, 5850, 5900, 5950, 6000, 6050, 9999])
sblim1=np.array([0.1000, 25.50, 26.50, 27.50, 28.50, 28.50, 28.70, 29, 29.30, 29.40, 29.50, 29.70, 29.90, 30.10, 30.30, 30.50, 30.60, 30.80, 31, 31.20, 31.40, 31.60, 31.80, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.10, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.20, 32.10, 32.10, 32.20, 32.20, 32.30, 32.30, 32.30, 32.30, 32.40, 32.30, 32.30, 32.30, 32.30, 32.40, 32.40, 32.40, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.50, 32.60, 32.60, 32.60, 32.60, 32.60, 32.70, 32.70, 32.70, 32.70, 32.70, 32.70, 32.70, 32.70, 32.70, 32.7])
sblim2=np.array([37.200, 37.200, 37.200, 37.100, 37.100, 37.100, 37.100, 37.200, 37.200, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.400, 37.400, 37.400, 37.400, 37.400, 37.400, 37.400, 37.400, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.400, 37.400, 37.400, 37.400, 37.400, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.300, 37.400, 37.400, 37.400, 37.400, 37.500, 37.500, 37.500, 37.500, 37.500, 37.500, 37.500, 37.500, 37.500, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.600, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.700, 37.70])
