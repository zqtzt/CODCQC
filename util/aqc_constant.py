#constant value configuration
import numpy as np
import COMSQC
import os

[COMS_PATH,a]=os.path.split(COMSQC.__file__)


kflagt_list = ['kflagt1', 'kflagt2', 'kflagt3', 'kflagt4', 'kflagt5', 'kflagt6', 'kflagt7',
               'kflagt8', 'kflagt9', 'kflagt10', 'kflagt11', 'kflagt12', 'kflagt13']

#nx=lon ny=lat kmax=深度index !0.5°一个格点数据 nx=721.ny=361,kmax=65
maxlevint=30000
maxlevel=300001
maxnumcast=10000000


#QC-scheme parameters  (for temperature)
#/OVERALL parameter limits
parmaxover=35.0
parminover=-2.0

#standard level
Std_level_119=np.array([1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400, 425, 450, 475, 500, 525, 550, 575, 600, 625, 650, 675, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 1750, 1800, 1850, 1900, 1950, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000],dtype=np.float)
Std_level_350=np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255, 260, 265, 270, 275, 280, 285, 290, 295, 300, 305, 310, 315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430, 435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505, 510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 680, 685, 690, 695, 700, 710, 720, 730, 740, 750, 760, 700, 780, 790, 800, 810, 820, 830, 840, 850, 860, 870, 880, 890, 900, 910, 920, 930, 940, 950, 960, 970, 980, 990, 1000, 1010, 1020, 1030, 1040, 1050, 1060, 1070, 1080, 1090, 1100, 1110, 1120, 1130, 1140, 1150, 1160, 1170, 1180, 1190, 1200, 1210, 1220, 1230, 1240, 1250, 1260, 1270, 1280, 1290, 1300, 1310, 1320, 1330, 1340, 1350, 1360, 1370, 1380, 1390, 1400, 1410, 1420, 1430, 1440, 1450, 1460, 1470, 1480, 1490, 1500, 1510, 1520, 1530, 1540, 1550, 1560, 1570, 1580, 1590, 1600, 1610, 1620, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1700, 1710, 1720, 1730, 1740, 1750, 1760, 1770, 1780, 1790, 1800, 1810, 1820, 1830, 1840, 1850, 1860, 1870, 1880, 1890, 1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000],dtype=np.float)

#thresholds for gradient check
DTDZmaxover=1.0
DTDZminover=-1.5

#extrema-check
#subjective setting, depend on the histogram
deltaext=0.5
maxextre=4   #牛眼个数为4个
levminext=6  #小于6个观测值,用于AQC_06check
minlevel=3  #小于3个观测数据

# total flagged check maximum percentage
perlimbad=75.0   #75%

dummy_value=9999  #_Fillvalue
ntz=121 # #122个深度范围 check02外部文件中的那个深度范围

### consant for histogram
zbin = 50  # !depth-bin=50m
tbin = 0.1  # !temperature-bin =0.1 oC
year=2022


#### external files with parameters
##  GEBCO_2021_15arc-seconds data
print('start reading GEBCO depth file')
data = np.load(COMS_PATH+'/background_field/gebco_2021_15arcsecond.npz')
elevation=data['elevation']
gebco_lat_bnd=data['lat_bnd']
gebco_lon_bnd=data['lon_bnd']

# Zhetao's climatology field
from scipy import io
print('start reading climatology field')
mat = io.loadmat(COMS_PATH+'/background_field/IAP_T_range.mat')
tmin=mat['T_min']
tmax=mat['T_max']
Std_depth=mat['Std_depth']
Std_depth=np.transpose(Std_depth)[0]
lat = np.linspace(-89, 90, 180)
lon = np.linspace(-179, 180, 360)
lon_bound = np.array([lon - 0.5, lon + 0.5])
lat_bound = np.array([lat - 0.5, lat + 0.5])
lat_bound[0, 0] = -90.0
lon_bound[0, 0] = -180.0
depth_left = Std_depth[1:] - np.diff(Std_depth) / 2
depth_left = np.insert(depth_left, 0, 0)
depth_right = np.hstack((depth_left[1:], 100000))
Std_depth_bound = np.array([depth_left, depth_right])

## Zhetao's gradient climatology field
print('start reading temperature gradient climatology field')
mat = io.loadmat(COMS_PATH+'/background_field/IAP_TG_range.mat')
Gradmin=mat['Gmin_all'][:]  #(360,180,79,12,6)
Gradmax=mat['Gmax_all'][:]
interp_grid=mat['interp_grid'][:]
Grad_lon=np.squeeze(mat['lon'][:])
Grad_lat=np.squeeze(mat['lat'][:])
Grad_std_depth=np.squeeze(mat['Std_depth'][:])
Grad_lon_bound = np.array([Grad_lon - 0.5, Grad_lon + 0.5])
Grad_lat_bound = np.array([Grad_lat - 0.5, Grad_lat + 0.5])
depth_left = Grad_std_depth[1:] - np.diff(Grad_std_depth) / 2
depth_left = np.insert(depth_left, 0, 0)
depth_right = np.hstack((depth_left[1:], 2050))
Grad_std_depth_bound = np.array([depth_left, depth_right])


###### IAP41 salinity climatology files
print('start reading salinity climatology field')
mat = io.loadmat(COMS_PATH+'/background_field/Salinity_clim_IAP41.mat')
Savg=mat['S_avg']
Std_depth_41=mat['Std_depth_41']
Std_depth_41=np.transpose(Std_depth_41)[0]
depth_left = Std_depth_41[1:] - np.diff(Std_depth_41) / 2
depth_left = np.insert(depth_left, 0, 0)
depth_right = np.hstack((depth_left[1:], 2050))
Std_depth_41_bound = np.array([depth_left, depth_right])


# global crude range check parameter
tzlim1_zhetao=np.array([-1.94768755000000, -1.95225004600000, -1.98010006200000, -1.98849999900000, -1.98767897400000, -1.98000001900000, -1.97667619500000, -1.97675002200000, -1.97473259700000, -1.97214731100000, -1.97280522300000, -1.96975002900000, -1.96406035300000, -1.95867118700000, -1.95760819400000, -1.95473037400000, -1.95792963900000, -1.95863351500000, -1.95965448900000, -1.95651969800000, -1.95756032000000, -1.96557534800000, -1.96242908500000, -1.96283887600000, -1.96242118300000, -1.96018763000000, -1.96130792500000, -1.96206628000000, -1.96351277500000, -1.96274047800000, -1.96340738700000, -1.96629215800000, -1.96462357800000, -1.96472310100000, -1.96108301100000, -1.96747040100000, -1.96970592300000, -1.97113240800000, -1.97472140600000, -1.97662952600000, -1.97740986900000, -1.97642361000000, -1.97852320000000, -1.98114364900000, -1.97265709300000, -1.96929490500000, -1.96310323200000, -1.96499998900000, -1.95130717800000, -1.95000004800000, -1.93845873300000, -1.93415430900000, -1.92749995000000, -1.92100000400000, -1.90553284500000, -1.88951297300000, -1.43708553800000, -1.24599521200000, -1.22622388200000, -1.19640178600000, -1.18386636400000, -1.17723471300000, -1.14992000300000, -1.14137001300000, -1.14768251500000, -1.16601528200000, -1.13648510700000, -1.13120994600000, -1.13056283900000, -1.11987579900000, -1.11101897700000, -1.10207557000000, -1.10433081200000, -1.09833700200000, -1.10000002400000, -1.09943973900000, -1.09934522300000, -1.10456908100000, -1.11467329500000, -1.18289419100000, -1.17850906000000, -1.16976239300000, -1.17973916500000, -1.18590824400000, -1.17741727300000, -1.16949041700000, -1.16556187600000, -1.17066016000000, -1.17730749100000, -1.16583911300000, -1.17686218300000, -1.18379736700000, -1.14814518400000, -1.14955866200000, -0.891392809000000, -0.869396445000000, -0.685681101000000, -0.670964240000000, -0.724622044000000, -0.777285709000000, -0.778309367000000, -0.659930969000000, -0.569577095000000, -0.614241714000000, -0.648026484000000, -0.570829078000000, -0.578029247000000, -0.557322245000000, -0.558271451000000, -0.511880521000000, -0.460733566000000, -0.442026734000000, -0.437393090000000, -0.430000007000000, -0.387023531000000, -0.372624350000000, -0.307705852000000, -0.300000000000000, -0.300000000000000, -0.300000000000000])
tzlim2_zhetao=np.array([34, 34, 33, 33, 32, 31, 30.9524351000000, 30.7690656500000, 30.6877841100000, 30.6411232200000, 30.6260553500000, 30.5103025900000, 30.5368883300000, 30.5031952500000, 30.4405058700000, 30.3901155200000, 30.3020436900000, 30.1983851500000, 30.0918122700000, 29.9921878200000, 29.8745873100000, 29.7502000800000, 29.5337267400000, 29.3349410000000, 29.0279300300000, 28.6714901000000, 28.3272080100000, 27.7937463700000, 27.3139913300000, 26.7029808900000, 26.0135981400000, 25.0630505500000, 23.0468355700000, 21.6897801600000, 20.6878816700000, 19.9103868500000, 19.4996235500000, 19.2304928400000, 19.0749695000000, 18.9472847600000, 18.8093052400000, 18.6695578800000, 18.4978696100000, 18.3219874100000, 18.1808969200000, 18.0227984400000, 17.8706468000000, 17.6676505900000, 17.4451009300000, 17.1791031500000, 16.8746170800000, 16.5123200800000, 16.1097737800000, 15.6929356400000, 14.7397770200000, 13.7781605100000, 12.8439988500000, 12.2040251500000, 11.9186077300000, 11.7066536700000, 11.7335776600000, 11.5929144400000, 11.5260457000000, 11.4784821100000, 11.3656268000000, 11.1834515800000, 10.8650910000000, 10.3836113700000, 10.0202278800000, 9.42836473500000, 8.47432089100000, 7.86472831600000, 7.33862650400000, 6.87549015200000, 6.42825586000000, 6.01293056000000, 5.69437509700000, 5.39401503500000, 5.12192987700000, 5.10193367100000, 4.94046074900000, 4.16811606500000, 3.89245786700000, 3.72693968900000, 4.05846577700000, 3.49517337700000, 3.43042504000000, 3.46090576700000, 3.26465470600000, 3.20197281900000, 3.12520498800000, 3.10977184400000, 3.01400997000000, 3.01624433900000, 2.98028220300000, 2.81757211000000, 2.75773802300000, 2.64315139400000, 2.63960788800000, 2.60740921600000, 2.61459414900000, 2.61590898400000, 2.59102693700000, 2.61836438200000, 2.60410305500000, 2.57222933200000, 2.57394803000000, 2.55913434300000, 2.57190694100000, 2.58704134400000, 2.57875664500000, 2.57960103900000, 2.56825061400000, 2.48493122200000, 2.50142513200000, 2.50728940300000, 2.50781256100000, 2.48570308300000, 2.49967947000000, 2.49967947000000])
tzlim2_zhetao[Std_depth<=700]=tzlim2_zhetao[Std_depth<=700]*1.01  #tol=0.01


